"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[828],{42243:function(t,e,r){r.d(e,{ew:function(){return We},RG:function(){return Be},j5:function(){return Xe},nh:function(){return A},yc:function(){return J},YW:function(){return j},Wf:function(){return Le}});var s=r(47169),n=r(40307),i=r.n(n),o=r(26541),a=r(36547),c=r.n(a),u=r(36301),l=r.n(u),h=r(70164),d=r(19939),p=r(59321),g=r(70889),b=r(5663),f=r(7023),m=r.n(f),y=r(94830),w=r.n(y),k=r(98810);const S=t=>o.lW.isBuffer(t)?t:t instanceof Uint8Array?o.lW.from(t.buffer,t.byteOffset,t.byteLength):o.lW.from(t);class _{constructor(t){Object.assign(this,t)}encode(){return o.lW.from((0,d.serialize)(I,this))}static decode(t){return(0,d.deserialize)(I,this,t)}static decodeUnchecked(t){return(0,d.deserializeUnchecked)(I,this,t)}}const I=new Map;class A extends _{constructor(t){if(super({}),(0,s.Z)(this,"_bn",void 0),function(t){return void 0!==t._bn}(t))this._bn=t._bn;else{if("string"===typeof t){const e=l().decode(t);if(32!=e.length)throw new Error("Invalid public key input");this._bn=new(c())(e)}else this._bn=new(c())(t);if(this._bn.byteLength()>32)throw new Error("Invalid public key input")}}equals(t){return this._bn.eq(t._bn)}toBase58(){return l().encode(this.toBytes())}toBytes(){return this.toBuffer()}toBuffer(){const t=this._bn.toArrayLike(o.lW);if(32===t.length)return t;const e=o.lW.alloc(32);return t.copy(e,32-t.length),e}toString(){return this.toBase58()}static async createWithSeed(t,e,r){const s=o.lW.concat([t.toBuffer(),o.lW.from(e),r.toBuffer()]),n=await(0,h.JQ)(new Uint8Array(s));return new A(o.lW.from(n,"hex"))}static async createProgramAddress(t,e){let r=o.lW.alloc(0);t.forEach((function(t){if(t.length>32)throw new TypeError("Max seed length exceeded");r=o.lW.concat([r,S(t)])})),r=o.lW.concat([r,e.toBuffer(),o.lW.from("ProgramDerivedAddress")]);let s=await(0,h.JQ)(new Uint8Array(r)),n=new(c())(s,16).toArray(void 0,32);if(R(n))throw new Error("Invalid seeds, address must fall off the curve");return new A(n)}static async findProgramAddress(t,e){let r,s=255;for(;0!=s;){try{const n=t.concat(o.lW.from([s]));r=await this.createProgramAddress(n,e)}catch(n){if(n instanceof TypeError)throw n;s--;continue}return[r,s]}throw new Error("Unable to find a viable program address nonce")}static isOnCurve(t){return 1==R(t)}}(0,s.Z)(A,"default",new A("11111111111111111111111111111111")),I.set(A,{kind:"struct",fields:[["_bn","u256"]]});let x=i().lowlevel;function R(t){var e=[x.gf(),x.gf(),x.gf(),x.gf()],r=x.gf(),s=x.gf(),n=x.gf(),i=x.gf(),o=x.gf(),a=x.gf(),c=x.gf();return x.set25519(e[2],v),x.unpack25519(e[1],t),x.S(n,e[1]),x.M(i,n,x.D),x.Z(n,n,e[2]),x.A(i,e[2],i),x.S(o,i),x.S(a,o),x.M(c,a,o),x.M(r,c,n),x.M(r,r,i),x.pow2523(r,r),x.M(r,r,n),x.M(r,r,i),x.M(r,r,i),x.M(e[0],r,i),x.S(s,e[0]),x.M(s,s,i),P(s,n)&&x.M(e[0],e[0],E),x.S(s,e[0]),x.M(s,s,i),P(s,n)?0:1}let v=x.gf([1]),E=x.gf([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function P(t,e){var r=new Uint8Array(32),s=new Uint8Array(32);return x.pack25519(r,t),x.pack25519(s,e),x.crypto_verify_32(r,0,s,0)}new A("BPFLoader1111111111111111111111111111111111");const W=(t="publicKey")=>p.blob(32,t),B=(t="string")=>{const e=p.struct([p.u32("length"),p.u32("lengthPadding"),p.blob(p.offset(p.u32(),-8),"chars")],t),r=e.decode.bind(e),s=e.encode.bind(e);return e.decode=(t,e)=>r(t,e).chars.toString("utf8"),e.encode=(t,e,r)=>{const n={chars:o.lW.from(t,"utf8")};return s(n,e,r)},e.alloc=t=>p.u32().span+p.u32().span+o.lW.from(t,"utf8").length,e};function C(t){let e=0,r=0;for(;;){let s=t.shift();if(e|=(127&s)<<7*r,r+=1,0===(128&s))break}return e}function T(t,e){let r=e;for(;;){let e=127&r;if(r>>=7,0==r){t.push(e);break}e|=128,t.push(e)}}class U{constructor(t){(0,s.Z)(this,"header",void 0),(0,s.Z)(this,"accountKeys",void 0),(0,s.Z)(this,"recentBlockhash",void 0),(0,s.Z)(this,"instructions",void 0),(0,s.Z)(this,"indexToProgramIds",new Map),this.header=t.header,this.accountKeys=t.accountKeys.map((t=>new A(t))),this.recentBlockhash=t.recentBlockhash,this.instructions=t.instructions,this.instructions.forEach((t=>this.indexToProgramIds.set(t.programIdIndex,this.accountKeys[t.programIdIndex])))}isAccountSigner(t){return t<this.header.numRequiredSignatures}isAccountWritable(t){return t<this.header.numRequiredSignatures-this.header.numReadonlySignedAccounts||t>=this.header.numRequiredSignatures&&t<this.accountKeys.length-this.header.numReadonlyUnsignedAccounts}isProgramId(t){return this.indexToProgramIds.has(t)}programIds(){return[...this.indexToProgramIds.values()]}nonProgramIds(){return this.accountKeys.filter(((t,e)=>!this.isProgramId(e)))}serialize(){const t=this.accountKeys.length;let e=[];T(e,t);const r=this.instructions.map((t=>{const{accounts:e,programIdIndex:r}=t,s=l().decode(t.data);let n=[];T(n,e.length);let i=[];return T(i,s.length),{programIdIndex:r,keyIndicesCount:o.lW.from(n),keyIndices:o.lW.from(e),dataLength:o.lW.from(i),data:s}}));let s=[];T(s,r.length);let n=o.lW.alloc(q);o.lW.from(s).copy(n);let i=s.length;r.forEach((t=>{const e=p.struct([p.u8("programIdIndex"),p.blob(t.keyIndicesCount.length,"keyIndicesCount"),p.seq(p.u8("keyIndex"),t.keyIndices.length,"keyIndices"),p.blob(t.dataLength.length,"dataLength"),p.seq(p.u8("userdatum"),t.data.length,"data")]).encode(t,n,i);i+=e})),n=n.slice(0,i);const a=p.struct([p.blob(1,"numRequiredSignatures"),p.blob(1,"numReadonlySignedAccounts"),p.blob(1,"numReadonlyUnsignedAccounts"),p.blob(e.length,"keyCount"),p.seq(W("key"),t,"keys"),W("recentBlockhash")]),c={numRequiredSignatures:o.lW.from([this.header.numRequiredSignatures]),numReadonlySignedAccounts:o.lW.from([this.header.numReadonlySignedAccounts]),numReadonlyUnsignedAccounts:o.lW.from([this.header.numReadonlyUnsignedAccounts]),keyCount:o.lW.from(e),keys:this.accountKeys.map((t=>S(t.toBytes()))),recentBlockhash:l().decode(this.recentBlockhash)};let u=o.lW.alloc(2048);const h=a.encode(c,u);return n.copy(u,h),u.slice(0,h+n.length)}static from(t){let e=[...t];const r=e.shift(),s=e.shift(),n=e.shift(),i=C(e);let a=[];for(let p=0;p<i;p++){const t=e.slice(0,32);e=e.slice(32),a.push(l().encode(o.lW.from(t)))}const c=e.slice(0,32);e=e.slice(32);const u=C(e);let h=[];for(let p=0;p<u;p++){const t=e.shift(),r=C(e),s=e.slice(0,r);e=e.slice(r);const n=C(e),i=e.slice(0,n),a=l().encode(o.lW.from(i));e=e.slice(n),h.push({programIdIndex:t,accounts:s,data:a})}const d={header:{numRequiredSignatures:r,numReadonlySignedAccounts:s,numReadonlyUnsignedAccounts:n},recentBlockhash:l().encode(o.lW.from(c)),accountKeys:a,instructions:h};return new U(d)}}function Z(t,e){if(!t)throw new Error(e||"Assertion failed")}const O=o.lW.alloc(64).fill(0),q=1232;class z{constructor(t){(0,s.Z)(this,"keys",void 0),(0,s.Z)(this,"programId",void 0),(0,s.Z)(this,"data",o.lW.alloc(0)),this.programId=t.programId,this.keys=t.keys,t.data&&(this.data=t.data)}}class j{get signature(){return this.signatures.length>0?this.signatures[0].signature:null}constructor(t){(0,s.Z)(this,"signatures",[]),(0,s.Z)(this,"feePayer",void 0),(0,s.Z)(this,"instructions",[]),(0,s.Z)(this,"recentBlockhash",void 0),(0,s.Z)(this,"nonceInfo",void 0),t&&Object.assign(this,t)}add(...t){if(0===t.length)throw new Error("No instructions");return t.forEach((t=>{"instructions"in t?this.instructions=this.instructions.concat(t.instructions):"data"in t&&"programId"in t&&"keys"in t?this.instructions.push(t):this.instructions.push(new z(t))})),this}compileMessage(){const{nonceInfo:t}=this;t&&this.instructions[0]!=t.nonceInstruction&&(this.recentBlockhash=t.nonce,this.instructions.unshift(t.nonceInstruction));const{recentBlockhash:e}=this;if(!e)throw new Error("Transaction recentBlockhash required");let r;if(this.instructions.length<1&&console.warn("No instructions provided"),this.feePayer)r=this.feePayer;else{if(!(this.signatures.length>0&&this.signatures[0].publicKey))throw new Error("Transaction fee payer required");r=this.signatures[0].publicKey}for(let l=0;l<this.instructions.length;l++)if(void 0===this.instructions[l].programId)throw new Error(`Transaction instruction index ${l} has undefined program id`);const s=[],n=[];this.instructions.forEach((t=>{t.keys.forEach((t=>{n.push({...t})}));const e=t.programId.toString();s.includes(e)||s.push(e)})),s.forEach((t=>{n.push({pubkey:new A(t),isSigner:!1,isWritable:!1})})),n.sort((function(t,e){const r=t.isSigner===e.isSigner?0:t.isSigner?-1:1,s=t.isWritable===e.isWritable?0:t.isWritable?-1:1;return r||s}));const i=[];n.forEach((t=>{const e=t.pubkey.toString(),r=i.findIndex((t=>t.pubkey.toString()===e));r>-1?i[r].isWritable=i[r].isWritable||t.isWritable:i.push(t)}));const o=i.findIndex((t=>t.pubkey.equals(r)));if(o>-1){const[t]=i.splice(o,1);t.isSigner=!0,t.isWritable=!0,i.unshift(t)}else i.unshift({pubkey:r,isSigner:!0,isWritable:!0});for(const l of this.signatures){const t=i.findIndex((t=>t.pubkey.equals(l.publicKey)));if(!(t>-1))throw new Error(`unknown signer: ${l.publicKey.toString()}`);i[t].isSigner||(i[t].isSigner=!0,console.warn("Transaction references a signature that is unnecessary, only the fee payer and instruction signer accounts should sign a transaction. This behavior is deprecated and will throw an error in the next major version release."))}let a=0,c=0,u=0;const h=[],d=[];i.forEach((({pubkey:t,isSigner:e,isWritable:r})=>{e?(h.push(t.toString()),a+=1,r||(c+=1)):(d.push(t.toString()),r||(u+=1))}));const p=h.concat(d),g=this.instructions.map((t=>{const{data:e,programId:r}=t;return{programIdIndex:p.indexOf(r.toString()),accounts:t.keys.map((t=>p.indexOf(t.pubkey.toString()))),data:l().encode(e)}}));return g.forEach((t=>{Z(t.programIdIndex>=0),t.accounts.forEach((t=>Z(t>=0)))})),new U({header:{numRequiredSignatures:a,numReadonlySignedAccounts:c,numReadonlyUnsignedAccounts:u},accountKeys:p,recentBlockhash:e,instructions:g})}_compile(){const t=this.compileMessage(),e=t.accountKeys.slice(0,t.header.numRequiredSignatures);if(this.signatures.length===e.length){if(this.signatures.every(((t,r)=>e[r].equals(t.publicKey))))return t}return this.signatures=e.map((t=>({signature:null,publicKey:t}))),t}serializeMessage(){return this._compile().serialize()}setSigners(...t){if(0===t.length)throw new Error("No signers");const e=new Set;this.signatures=t.filter((t=>{const r=t.toString();return!e.has(r)&&(e.add(r),!0)})).map((t=>({signature:null,publicKey:t})))}sign(...t){if(0===t.length)throw new Error("No signers");const e=new Set,r=[];for(const n of t){const t=n.publicKey.toString();e.has(t)||(e.add(t),r.push(n))}this.signatures=r.map((t=>({signature:null,publicKey:t.publicKey})));const s=this._compile();this._partialSign(s,...r),this._verifySignatures(s.serialize(),!0)}partialSign(...t){if(0===t.length)throw new Error("No signers");const e=new Set,r=[];for(const n of t){const t=n.publicKey.toString();e.has(t)||(e.add(t),r.push(n))}const s=this._compile();this._partialSign(s,...r)}_partialSign(t,...e){const r=t.serialize();e.forEach((t=>{const e=i().sign.detached(r,t.secretKey);this._addSignature(t.publicKey,S(e))}))}addSignature(t,e){this._compile(),this._addSignature(t,e)}_addSignature(t,e){Z(64===e.length);const r=this.signatures.findIndex((e=>t.equals(e.publicKey)));if(r<0)throw new Error(`unknown signer: ${t.toString()}`);this.signatures[r].signature=o.lW.from(e)}verifySignatures(){return this._verifySignatures(this.serializeMessage(),!0)}_verifySignatures(t,e){for(const{signature:r,publicKey:s}of this.signatures)if(null===r){if(e)return!1}else if(!i().sign.detached.verify(t,r,s.toBuffer()))return!1;return!0}serialize(t){const{requireAllSignatures:e,verifySignatures:r}=Object.assign({requireAllSignatures:!0,verifySignatures:!0},t),s=this.serializeMessage();if(r&&!this._verifySignatures(s,e))throw new Error("Signature verification failed");return this._serialize(s)}_serialize(t){const{signatures:e}=this,r=[];T(r,e.length);const s=r.length+64*e.length+t.length,n=o.lW.alloc(s);return Z(e.length<256),o.lW.from(r).copy(n,0),e.forEach((({signature:t},e)=>{null!==t&&(Z(64===t.length,"signature has invalid length"),o.lW.from(t).copy(n,r.length+64*e))})),t.copy(n,r.length+64*e.length),Z(n.length<=q,`Transaction too large: ${n.length} > ${q}`),n}get keys(){return Z(1===this.instructions.length),this.instructions[0].keys.map((t=>t.pubkey))}get programId(){return Z(1===this.instructions.length),this.instructions[0].programId}get data(){return Z(1===this.instructions.length),this.instructions[0].data}static from(t){let e=[...t];const r=C(e);let s=[];for(let n=0;n<r;n++){const t=e.slice(0,64);e=e.slice(64),s.push(l().encode(o.lW.from(t)))}return j.populate(U.from(e),s)}static populate(t,e=[]){const r=new j;return r.recentBlockhash=t.recentBlockhash,t.header.numRequiredSignatures>0&&(r.feePayer=t.accountKeys[0]),e.forEach(((e,s)=>{const n={signature:e==l().encode(O)?null:l().decode(e),publicKey:t.accountKeys[s]};r.signatures.push(n)})),t.instructions.forEach((e=>{const s=e.accounts.map((e=>{const s=t.accountKeys[e];return{pubkey:s,isSigner:r.signatures.some((t=>t.publicKey.toString()===s.toString()))||t.isAccountSigner(e),isWritable:t.isAccountWritable(e)}}));r.instructions.push(new z({keys:s,programId:t.accountKeys[e.programIdIndex],data:l().decode(e.data)}))})),r}}const K=new A("SysvarC1ock11111111111111111111111111111111"),N=new A("SysvarRecentB1ockHashes11111111111111111111"),G=new A("SysvarRent111111111111111111111111111111111"),L=(new A("SysvarRewards111111111111111111111111111111"),new A("SysvarStakeHistory1111111111111111111111111"));new A("Sysvar1nstructions1111111111111111111111111");async function X(t,e,r,s){const n=s&&{skipPreflight:s.skipPreflight,preflightCommitment:s.preflightCommitment||s.commitment},i=await t.sendTransaction(e,r,n),o=(await t.confirmTransaction(i,s&&s.commitment)).value;if(o.err)throw new Error(`Transaction ${i} failed (${JSON.stringify(o)})`);return i}function M(t){return new Promise((e=>setTimeout(e,t)))}function D(t,e){const r=t.layout.span>=0?t.layout.span:function(t,e){let r=0;return t.layout.fields.forEach((t=>{t.span>=0?r+=t.span:"function"===typeof t.alloc&&(r+=t.alloc(e[t.property]))})),r}(t,e),s=o.lW.alloc(r),n=Object.assign({instruction:t.index},e);return t.layout.encode(n,s),s}const F=p.nu64("lamportsPerSignature"),$=p.struct([p.u32("version"),p.u32("state"),W("authorizedPubkey"),W("nonce"),p.struct([F],"feeCalculator")]),H=$.span;class V{constructor(t){(0,s.Z)(this,"authorizedPubkey",void 0),(0,s.Z)(this,"nonce",void 0),(0,s.Z)(this,"feeCalculator",void 0),this.authorizedPubkey=t.authorizedPubkey,this.nonce=t.nonce,this.feeCalculator=t.feeCalculator}static fromAccountData(t){const e=$.decode(S(t),0);return new V({authorizedPubkey:new A(e.authorizedPubkey),nonce:new A(e.nonce).toString(),feeCalculator:e.feeCalculator})}}const Q=Object.freeze({Create:{index:0,layout:p.struct([p.u32("instruction"),p.ns64("lamports"),p.ns64("space"),W("programId")])},Assign:{index:1,layout:p.struct([p.u32("instruction"),W("programId")])},Transfer:{index:2,layout:p.struct([p.u32("instruction"),p.ns64("lamports")])},CreateWithSeed:{index:3,layout:p.struct([p.u32("instruction"),W("base"),B("seed"),p.ns64("lamports"),p.ns64("space"),W("programId")])},AdvanceNonceAccount:{index:4,layout:p.struct([p.u32("instruction")])},WithdrawNonceAccount:{index:5,layout:p.struct([p.u32("instruction"),p.ns64("lamports")])},InitializeNonceAccount:{index:6,layout:p.struct([p.u32("instruction"),W("authorized")])},AuthorizeNonceAccount:{index:7,layout:p.struct([p.u32("instruction"),W("authorized")])},Allocate:{index:8,layout:p.struct([p.u32("instruction"),p.ns64("space")])},AllocateWithSeed:{index:9,layout:p.struct([p.u32("instruction"),W("base"),B("seed"),p.ns64("space"),W("programId")])},AssignWithSeed:{index:10,layout:p.struct([p.u32("instruction"),W("base"),B("seed"),W("programId")])},TransferWithSeed:{index:11,layout:p.struct([p.u32("instruction"),p.ns64("lamports"),B("seed"),W("programId")])}});class J{constructor(){}static createAccount(t){const e=D(Q.Create,{lamports:t.lamports,space:t.space,programId:S(t.programId.toBuffer())});return new z({keys:[{pubkey:t.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:t.newAccountPubkey,isSigner:!0,isWritable:!0}],programId:this.programId,data:e})}static transfer(t){let e,r;if("basePubkey"in t){e=D(Q.TransferWithSeed,{lamports:t.lamports,seed:t.seed,programId:S(t.programId.toBuffer())}),r=[{pubkey:t.fromPubkey,isSigner:!1,isWritable:!0},{pubkey:t.basePubkey,isSigner:!0,isWritable:!1},{pubkey:t.toPubkey,isSigner:!1,isWritable:!0}]}else{e=D(Q.Transfer,{lamports:t.lamports}),r=[{pubkey:t.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:t.toPubkey,isSigner:!1,isWritable:!0}]}return new z({keys:r,programId:this.programId,data:e})}static assign(t){let e,r;if("basePubkey"in t){e=D(Q.AssignWithSeed,{base:S(t.basePubkey.toBuffer()),seed:t.seed,programId:S(t.programId.toBuffer())}),r=[{pubkey:t.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:t.basePubkey,isSigner:!0,isWritable:!1}]}else{e=D(Q.Assign,{programId:S(t.programId.toBuffer())}),r=[{pubkey:t.accountPubkey,isSigner:!0,isWritable:!0}]}return new z({keys:r,programId:this.programId,data:e})}static createAccountWithSeed(t){const e=D(Q.CreateWithSeed,{base:S(t.basePubkey.toBuffer()),seed:t.seed,lamports:t.lamports,space:t.space,programId:S(t.programId.toBuffer())});let r=[{pubkey:t.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:t.newAccountPubkey,isSigner:!1,isWritable:!0}];return t.basePubkey!=t.fromPubkey&&r.push({pubkey:t.basePubkey,isSigner:!0,isWritable:!1}),new z({keys:r,programId:this.programId,data:e})}static createNonceAccount(t){const e=new j;"basePubkey"in t&&"seed"in t?e.add(J.createAccountWithSeed({fromPubkey:t.fromPubkey,newAccountPubkey:t.noncePubkey,basePubkey:t.basePubkey,seed:t.seed,lamports:t.lamports,space:H,programId:this.programId})):e.add(J.createAccount({fromPubkey:t.fromPubkey,newAccountPubkey:t.noncePubkey,lamports:t.lamports,space:H,programId:this.programId}));const r={noncePubkey:t.noncePubkey,authorizedPubkey:t.authorizedPubkey};return e.add(this.nonceInitialize(r)),e}static nonceInitialize(t){const e=D(Q.InitializeNonceAccount,{authorized:S(t.authorizedPubkey.toBuffer())}),r={keys:[{pubkey:t.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:N,isSigner:!1,isWritable:!1},{pubkey:G,isSigner:!1,isWritable:!1}],programId:this.programId,data:e};return new z(r)}static nonceAdvance(t){const e=D(Q.AdvanceNonceAccount),r={keys:[{pubkey:t.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:N,isSigner:!1,isWritable:!1},{pubkey:t.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:e};return new z(r)}static nonceWithdraw(t){const e=D(Q.WithdrawNonceAccount,{lamports:t.lamports});return new z({keys:[{pubkey:t.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:t.toPubkey,isSigner:!1,isWritable:!0},{pubkey:N,isSigner:!1,isWritable:!1},{pubkey:G,isSigner:!1,isWritable:!1},{pubkey:t.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:e})}static nonceAuthorize(t){const e=D(Q.AuthorizeNonceAccount,{authorized:S(t.newAuthorizedPubkey.toBuffer())});return new z({keys:[{pubkey:t.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:t.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:e})}static allocate(t){let e,r;if("basePubkey"in t){e=D(Q.AllocateWithSeed,{base:S(t.basePubkey.toBuffer()),seed:t.seed,space:t.space,programId:S(t.programId.toBuffer())}),r=[{pubkey:t.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:t.basePubkey,isSigner:!0,isWritable:!1}]}else{e=D(Q.Allocate,{space:t.space}),r=[{pubkey:t.accountPubkey,isSigner:!0,isWritable:!0}]}return new z({keys:r,programId:this.programId,data:e})}}(0,s.Z)(J,"programId",new A("11111111111111111111111111111111"));const Y=q-300;class tt{constructor(){}static getMinNumSignatures(t){return 2*(Math.ceil(t/tt.chunkSize)+1+1)}static async load(t,e,r,s,n){{const i=await t.getMinimumBalanceForRentExemption(n.length),o=await t.getAccountInfo(r.publicKey,"confirmed");let a=null;if(null!==o){if(o.executable)return console.error("Program load failed, account is already executable"),!1;o.data.length!==n.length&&(a=a||new j,a.add(J.allocate({accountPubkey:r.publicKey,space:n.length}))),o.owner.equals(s)||(a=a||new j,a.add(J.assign({accountPubkey:r.publicKey,programId:s}))),o.lamports<i&&(a=a||new j,a.add(J.transfer({fromPubkey:e.publicKey,toPubkey:r.publicKey,lamports:i-o.lamports})))}else a=(new j).add(J.createAccount({fromPubkey:e.publicKey,newAccountPubkey:r.publicKey,lamports:i>0?i:1,space:n.length,programId:s}));null!==a&&await X(t,a,[e,r],{commitment:"confirmed"})}const i=p.struct([p.u32("instruction"),p.u32("offset"),p.u32("bytesLength"),p.u32("bytesLengthPadding"),p.seq(p.u8("byte"),p.offset(p.u32(),-8),"bytes")]),a=tt.chunkSize;let c=0,u=n,l=[];for(;u.length>0;){const n=u.slice(0,a),h=o.lW.alloc(a+16);i.encode({instruction:0,offset:c,bytes:n},h);const d=(new j).add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0}],programId:s,data:h});if(l.push(X(t,d,[e,r],{commitment:"confirmed"})),t._rpcEndpoint.includes("solana.com")){const t=4;await M(1e3/t)}c+=a,u=u.slice(a)}await Promise.all(l);{const n=p.struct([p.u32("instruction")]),i=o.lW.alloc(n.span);n.encode({instruction:1},i);const a=(new j).add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0},{pubkey:G,isSigner:!1,isWritable:!1}],programId:s,data:i});await X(t,a,[e,r],{commitment:"confirmed"})}return!0}}(0,s.Z)(tt,"chunkSize",Y);new A("BPFLoader2111111111111111111111111111111111");var et="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof window?window:"undefined"!==typeof r.g?r.g:"undefined"!==typeof self?self:{};function rt(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var st={exports:{}};!function(t,e){var r="undefined"!==typeof self?self:et,s=function(){function t(){this.fetch=!1,this.DOMException=r.DOMException}return t.prototype=r,new t}();!function(t){!function(e){var r="URLSearchParams"in t,s="Symbol"in t&&"iterator"in Symbol,n="FileReader"in t&&"Blob"in t&&function(){try{return new Blob,!0}catch(t){return!1}}(),i="FormData"in t,o="ArrayBuffer"in t;if(o)var a=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],c=ArrayBuffer.isView||function(t){return t&&a.indexOf(Object.prototype.toString.call(t))>-1};function u(t){if("string"!==typeof t&&(t=String(t)),/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(t))throw new TypeError("Invalid character in header field name");return t.toLowerCase()}function l(t){return"string"!==typeof t&&(t=String(t)),t}function h(t){var e={next:function(){var e=t.shift();return{done:void 0===e,value:e}}};return s&&(e[Symbol.iterator]=function(){return e}),e}function d(t){this.map={},t instanceof d?t.forEach((function(t,e){this.append(e,t)}),this):Array.isArray(t)?t.forEach((function(t){this.append(t[0],t[1])}),this):t&&Object.getOwnPropertyNames(t).forEach((function(e){this.append(e,t[e])}),this)}function p(t){if(t.bodyUsed)return Promise.reject(new TypeError("Already read"));t.bodyUsed=!0}function g(t){return new Promise((function(e,r){t.onload=function(){e(t.result)},t.onerror=function(){r(t.error)}}))}function b(t){var e=new FileReader,r=g(e);return e.readAsArrayBuffer(t),r}function f(t){if(t.slice)return t.slice(0);var e=new Uint8Array(t.byteLength);return e.set(new Uint8Array(t)),e.buffer}function m(){return this.bodyUsed=!1,this._initBody=function(t){var e;this._bodyInit=t,t?"string"===typeof t?this._bodyText=t:n&&Blob.prototype.isPrototypeOf(t)?this._bodyBlob=t:i&&FormData.prototype.isPrototypeOf(t)?this._bodyFormData=t:r&&URLSearchParams.prototype.isPrototypeOf(t)?this._bodyText=t.toString():o&&n&&((e=t)&&DataView.prototype.isPrototypeOf(e))?(this._bodyArrayBuffer=f(t.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):o&&(ArrayBuffer.prototype.isPrototypeOf(t)||c(t))?this._bodyArrayBuffer=f(t):this._bodyText=t=Object.prototype.toString.call(t):this._bodyText="",this.headers.get("content-type")||("string"===typeof t?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):r&&URLSearchParams.prototype.isPrototypeOf(t)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},n&&(this.blob=function(){var t=p(this);if(t)return t;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?p(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(b)}),this.text=function(){var t=p(this);if(t)return t;if(this._bodyBlob)return function(t){var e=new FileReader,r=g(e);return e.readAsText(t),r}(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(function(t){for(var e=new Uint8Array(t),r=new Array(e.length),s=0;s<e.length;s++)r[s]=String.fromCharCode(e[s]);return r.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},i&&(this.formData=function(){return this.text().then(k)}),this.json=function(){return this.text().then(JSON.parse)},this}d.prototype.append=function(t,e){t=u(t),e=l(e);var r=this.map[t];this.map[t]=r?r+", "+e:e},d.prototype.delete=function(t){delete this.map[u(t)]},d.prototype.get=function(t){return t=u(t),this.has(t)?this.map[t]:null},d.prototype.has=function(t){return this.map.hasOwnProperty(u(t))},d.prototype.set=function(t,e){this.map[u(t)]=l(e)},d.prototype.forEach=function(t,e){for(var r in this.map)this.map.hasOwnProperty(r)&&t.call(e,this.map[r],r,this)},d.prototype.keys=function(){var t=[];return this.forEach((function(e,r){t.push(r)})),h(t)},d.prototype.values=function(){var t=[];return this.forEach((function(e){t.push(e)})),h(t)},d.prototype.entries=function(){var t=[];return this.forEach((function(e,r){t.push([r,e])})),h(t)},s&&(d.prototype[Symbol.iterator]=d.prototype.entries);var y=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function w(t,e){var r=(e=e||{}).body;if(t instanceof w){if(t.bodyUsed)throw new TypeError("Already read");this.url=t.url,this.credentials=t.credentials,e.headers||(this.headers=new d(t.headers)),this.method=t.method,this.mode=t.mode,this.signal=t.signal,r||null==t._bodyInit||(r=t._bodyInit,t.bodyUsed=!0)}else this.url=String(t);if(this.credentials=e.credentials||this.credentials||"same-origin",!e.headers&&this.headers||(this.headers=new d(e.headers)),this.method=function(t){var e=t.toUpperCase();return y.indexOf(e)>-1?e:t}(e.method||this.method||"GET"),this.mode=e.mode||this.mode||null,this.signal=e.signal||this.signal,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&r)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(r)}function k(t){var e=new FormData;return t.trim().split("&").forEach((function(t){if(t){var r=t.split("="),s=r.shift().replace(/\+/g," "),n=r.join("=").replace(/\+/g," ");e.append(decodeURIComponent(s),decodeURIComponent(n))}})),e}function S(t){var e=new d;return t.replace(/\r?\n[\t ]+/g," ").split(/\r?\n/).forEach((function(t){var r=t.split(":"),s=r.shift().trim();if(s){var n=r.join(":").trim();e.append(s,n)}})),e}function _(t,e){e||(e={}),this.type="default",this.status=void 0===e.status?200:e.status,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in e?e.statusText:"OK",this.headers=new d(e.headers),this.url=e.url||"",this._initBody(t)}w.prototype.clone=function(){return new w(this,{body:this._bodyInit})},m.call(w.prototype),m.call(_.prototype),_.prototype.clone=function(){return new _(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new d(this.headers),url:this.url})},_.error=function(){var t=new _(null,{status:0,statusText:""});return t.type="error",t};var I=[301,302,303,307,308];_.redirect=function(t,e){if(-1===I.indexOf(e))throw new RangeError("Invalid status code");return new _(null,{status:e,headers:{location:t}})},e.DOMException=t.DOMException;try{new e.DOMException}catch(x){e.DOMException=function(t,e){this.message=t,this.name=e;var r=Error(t);this.stack=r.stack},e.DOMException.prototype=Object.create(Error.prototype),e.DOMException.prototype.constructor=e.DOMException}function A(t,r){return new Promise((function(s,i){var o=new w(t,r);if(o.signal&&o.signal.aborted)return i(new e.DOMException("Aborted","AbortError"));var a=new XMLHttpRequest;function c(){a.abort()}a.onload=function(){var t={status:a.status,statusText:a.statusText,headers:S(a.getAllResponseHeaders()||"")};t.url="responseURL"in a?a.responseURL:t.headers.get("X-Request-URL");var e="response"in a?a.response:a.responseText;s(new _(e,t))},a.onerror=function(){i(new TypeError("Network request failed"))},a.ontimeout=function(){i(new TypeError("Network request failed"))},a.onabort=function(){i(new e.DOMException("Aborted","AbortError"))},a.open(o.method,o.url,!0),"include"===o.credentials?a.withCredentials=!0:"omit"===o.credentials&&(a.withCredentials=!1),"responseType"in a&&n&&(a.responseType="blob"),o.headers.forEach((function(t,e){a.setRequestHeader(e,t)})),o.signal&&(o.signal.addEventListener("abort",c),a.onreadystatechange=function(){4===a.readyState&&o.signal.removeEventListener("abort",c)}),a.send("undefined"===typeof o._bodyInit?null:o._bodyInit)}))}A.polyfill=!0,t.fetch||(t.fetch=A,t.Headers=d,t.Request=w,t.Response=_),e.Headers=d,e.Request=w,e.Response=_,e.fetch=A,Object.defineProperty(e,"__esModule",{value:!0})}({})}(s),s.fetch.ponyfill=!0,delete s.fetch.polyfill;var n=s;(e=n.fetch).default=n.fetch,e.fetch=n.fetch,e.Headers=n.Headers,e.Request=n.Request,e.Response=n.Response,t.exports=e}(st,st.exports);var nt=rt(st.exports);function it(t){let e=0;for(;t>1;)t/=2,e++;return e}class ot{constructor(t,e,r,n,i){(0,s.Z)(this,"slotsPerEpoch",void 0),(0,s.Z)(this,"leaderScheduleSlotOffset",void 0),(0,s.Z)(this,"warmup",void 0),(0,s.Z)(this,"firstNormalEpoch",void 0),(0,s.Z)(this,"firstNormalSlot",void 0),this.slotsPerEpoch=t,this.leaderScheduleSlotOffset=e,this.warmup=r,this.firstNormalEpoch=n,this.firstNormalSlot=i}getEpoch(t){return this.getEpochAndSlotIndex(t)[0]}getEpochAndSlotIndex(t){if(t<this.firstNormalSlot){const r=it(0===(e=t+32+1)?1:(e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,1+(e|=e>>32)))-it(32)-1;return[r,t-(this.getSlotsInEpoch(r)-32)]}{const e=t-this.firstNormalSlot,r=Math.floor(e/this.slotsPerEpoch);return[this.firstNormalEpoch+r,e%this.slotsPerEpoch]}var e}getFirstSlotInEpoch(t){return t<=this.firstNormalEpoch?32*(Math.pow(2,t)-1):(t-this.firstNormalEpoch)*this.slotsPerEpoch+this.firstNormalSlot}getLastSlotInEpoch(t){return this.getFirstSlotInEpoch(t)+this.getSlotsInEpoch(t)-1}getSlotsInEpoch(t){return t<this.firstNormalEpoch?Math.pow(2,t+it(32)):this.slotsPerEpoch}}class at extends Error{constructor(t,e){super(t),(0,s.Z)(this,"logs",void 0),this.logs=e}}const ct=(0,g.oQ)((0,g.eE)(A),(0,g.Z_)(),(t=>new A(t))),ut=(0,g.bc)([(0,g.Z_)(),(0,g.i0)("base64")]),lt=(0,g.oQ)((0,g.eE)(o.lW),ut,(t=>o.lW.from(t[0],"base64")));function ht(t){return(0,g.G0)([(0,g.dt)({jsonrpc:(0,g.i0)("2.0"),id:(0,g.Z_)(),result:t}),(0,g.dt)({jsonrpc:(0,g.i0)("2.0"),id:(0,g.Z_)(),error:(0,g.dt)({code:(0,g._4)(),message:(0,g.Z_)(),data:(0,g.jt)((0,g.Yj)())})})])}const dt=ht((0,g._4)());function pt(t){return(0,g.oQ)(ht(t),dt,(e=>"error"in e?e:{...e,result:(0,g.Ue)(e.result,t)}))}function gt(t){return pt((0,g.dt)({context:(0,g.dt)({slot:(0,g.Rx)()}),value:t}))}function bt(t){return(0,g.dt)({context:(0,g.dt)({slot:(0,g.Rx)()}),value:t})}const ft=(0,g.dt)({foundation:(0,g.Rx)(),foundationTerm:(0,g.Rx)(),initial:(0,g.Rx)(),taper:(0,g.Rx)(),terminal:(0,g.Rx)()}),mt=pt((0,g.IX)((0,g.AG)((0,g.dt)({epoch:(0,g.Rx)(),effectiveSlot:(0,g.Rx)(),amount:(0,g.Rx)(),postBalance:(0,g.Rx)()})))),yt=(0,g.dt)({epoch:(0,g.Rx)(),slotIndex:(0,g.Rx)(),slotsInEpoch:(0,g.Rx)(),absoluteSlot:(0,g.Rx)(),blockHeight:(0,g.jt)((0,g.Rx)()),transactionCount:(0,g.jt)((0,g.Rx)())}),wt=(0,g.dt)({slotsPerEpoch:(0,g.Rx)(),leaderScheduleSlotOffset:(0,g.Rx)(),warmup:(0,g.O7)(),firstNormalEpoch:(0,g.Rx)(),firstNormalSlot:(0,g.Rx)()}),kt=(0,g.IM)((0,g.Z_)(),(0,g.IX)((0,g.Rx)())),St=(0,g.AG)((0,g.G0)([(0,g.dt)({}),(0,g.Z_)()])),_t=(0,g.dt)({err:St}),It=(0,g.i0)("receivedSignature"),At=(0,g.dt)({"solana-core":(0,g.Z_)(),"feature-set":(0,g.jt)((0,g.Rx)())}),xt=gt((0,g.dt)({err:(0,g.AG)((0,g.G0)([(0,g.dt)({}),(0,g.Z_)()])),logs:(0,g.AG)((0,g.IX)((0,g.Z_)())),accounts:(0,g.jt)((0,g.AG)((0,g.IX)((0,g.dt)({executable:(0,g.O7)(),owner:(0,g.Z_)(),lamports:(0,g.Rx)(),data:(0,g.IX)((0,g.Z_)()),rentEpoch:(0,g.jt)((0,g.Rx)())})))),unitsConsumed:(0,g.jt)((0,g.Rx)())}));const Rt=pt(ft),vt=pt(yt),Et=pt(wt),Pt=pt(kt),Wt=pt((0,g.Rx)()),Bt=gt((0,g.dt)({total:(0,g.Rx)(),circulating:(0,g.Rx)(),nonCirculating:(0,g.Rx)(),nonCirculatingAccounts:(0,g.IX)(ct)})),Ct=(0,g.dt)({amount:(0,g.Z_)(),uiAmount:(0,g.AG)((0,g.Rx)()),decimals:(0,g.Rx)(),uiAmountString:(0,g.jt)((0,g.Z_)())}),Tt=gt((0,g.IX)((0,g.dt)({address:ct,amount:(0,g.Z_)(),uiAmount:(0,g.AG)((0,g.Rx)()),decimals:(0,g.Rx)(),uiAmountString:(0,g.jt)((0,g.Z_)())}))),Ut=gt((0,g.IX)((0,g.dt)({pubkey:ct,account:(0,g.dt)({executable:(0,g.O7)(),owner:ct,lamports:(0,g.Rx)(),data:lt,rentEpoch:(0,g.Rx)()})}))),Zt=(0,g.dt)({program:(0,g.Z_)(),parsed:(0,g._4)(),space:(0,g.Rx)()}),Ot=gt((0,g.IX)((0,g.dt)({pubkey:ct,account:(0,g.dt)({executable:(0,g.O7)(),owner:ct,lamports:(0,g.Rx)(),data:Zt,rentEpoch:(0,g.Rx)()})}))),qt=gt((0,g.IX)((0,g.dt)({lamports:(0,g.Rx)(),address:ct}))),zt=(0,g.dt)({executable:(0,g.O7)(),owner:ct,lamports:(0,g.Rx)(),data:lt,rentEpoch:(0,g.Rx)()}),jt=(0,g.dt)({pubkey:ct,account:zt}),Kt=(0,g.oQ)((0,g.G0)([(0,g.eE)(o.lW),Zt]),(0,g.G0)([ut,Zt]),(t=>Array.isArray(t)?(0,g.Ue)(t,lt):t)),Nt=(0,g.dt)({executable:(0,g.O7)(),owner:ct,lamports:(0,g.Rx)(),data:Kt,rentEpoch:(0,g.Rx)()}),Gt=(0,g.dt)({pubkey:ct,account:Nt}),Lt=(0,g.dt)({state:(0,g.G0)([(0,g.i0)("active"),(0,g.i0)("inactive"),(0,g.i0)("activating"),(0,g.i0)("deactivating")]),active:(0,g.Rx)(),inactive:(0,g.Rx)()}),Xt=pt((0,g.IX)((0,g.dt)({signature:(0,g.Z_)(),slot:(0,g.Rx)(),err:St,memo:(0,g.AG)((0,g.Z_)()),blockTime:(0,g.jt)((0,g.AG)((0,g.Rx)()))}))),Mt=pt((0,g.IX)((0,g.dt)({signature:(0,g.Z_)(),slot:(0,g.Rx)(),err:St,memo:(0,g.AG)((0,g.Z_)()),blockTime:(0,g.jt)((0,g.AG)((0,g.Rx)()))}))),Dt=(0,g.dt)({subscription:(0,g.Rx)(),result:bt(zt)}),Ft=(0,g.dt)({pubkey:ct,account:zt}),$t=(0,g.dt)({subscription:(0,g.Rx)(),result:bt(Ft)}),Ht=(0,g.dt)({parent:(0,g.Rx)(),slot:(0,g.Rx)(),root:(0,g.Rx)()}),Vt=(0,g.dt)({subscription:(0,g.Rx)(),result:Ht}),Qt=(0,g.G0)([(0,g.dt)({type:(0,g.G0)([(0,g.i0)("firstShredReceived"),(0,g.i0)("completed"),(0,g.i0)("optimisticConfirmation"),(0,g.i0)("root")]),slot:(0,g.Rx)(),timestamp:(0,g.Rx)()}),(0,g.dt)({type:(0,g.i0)("createdBank"),parent:(0,g.Rx)(),slot:(0,g.Rx)(),timestamp:(0,g.Rx)()}),(0,g.dt)({type:(0,g.i0)("frozen"),slot:(0,g.Rx)(),timestamp:(0,g.Rx)(),stats:(0,g.dt)({numTransactionEntries:(0,g.Rx)(),numSuccessfulTransactions:(0,g.Rx)(),numFailedTransactions:(0,g.Rx)(),maxTransactionsPerEntry:(0,g.Rx)()})}),(0,g.dt)({type:(0,g.i0)("dead"),slot:(0,g.Rx)(),timestamp:(0,g.Rx)(),err:(0,g.Z_)()})]),Jt=(0,g.dt)({subscription:(0,g.Rx)(),result:Qt}),Yt=(0,g.dt)({subscription:(0,g.Rx)(),result:bt((0,g.G0)([_t,It]))}),te=(0,g.dt)({subscription:(0,g.Rx)(),result:(0,g.Rx)()}),ee=(0,g.dt)({pubkey:(0,g.Z_)(),gossip:(0,g.AG)((0,g.Z_)()),tpu:(0,g.AG)((0,g.Z_)()),rpc:(0,g.AG)((0,g.Z_)()),version:(0,g.AG)((0,g.Z_)())}),re=(0,g.dt)({votePubkey:(0,g.Z_)(),nodePubkey:(0,g.Z_)(),activatedStake:(0,g.Rx)(),epochVoteAccount:(0,g.O7)(),epochCredits:(0,g.IX)((0,g.bc)([(0,g.Rx)(),(0,g.Rx)(),(0,g.Rx)()])),commission:(0,g.Rx)(),lastVote:(0,g.Rx)(),rootSlot:(0,g.AG)((0,g.Rx)())}),se=pt((0,g.dt)({current:(0,g.IX)(re),delinquent:(0,g.IX)(re)})),ne=(0,g.G0)([(0,g.i0)("processed"),(0,g.i0)("confirmed"),(0,g.i0)("finalized")]),ie=(0,g.dt)({slot:(0,g.Rx)(),confirmations:(0,g.AG)((0,g.Rx)()),err:St,confirmationStatus:(0,g.jt)(ne)}),oe=gt((0,g.IX)((0,g.AG)(ie))),ae=pt((0,g.Rx)()),ce=(0,g.dt)({signatures:(0,g.IX)((0,g.Z_)()),message:(0,g.dt)({accountKeys:(0,g.IX)((0,g.Z_)()),header:(0,g.dt)({numRequiredSignatures:(0,g.Rx)(),numReadonlySignedAccounts:(0,g.Rx)(),numReadonlyUnsignedAccounts:(0,g.Rx)()}),instructions:(0,g.IX)((0,g.dt)({accounts:(0,g.IX)((0,g.Rx)()),data:(0,g.Z_)(),programIdIndex:(0,g.Rx)()})),recentBlockhash:(0,g.Z_)()})}),ue=(0,g.dt)({parsed:(0,g._4)(),program:(0,g.Z_)(),programId:ct}),le=(0,g.dt)({accounts:(0,g.IX)(ct),data:(0,g.Z_)(),programId:ct}),he=(0,g.G0)([le,ue]),de=(0,g.G0)([(0,g.dt)({parsed:(0,g._4)(),program:(0,g.Z_)(),programId:(0,g.Z_)()}),(0,g.dt)({accounts:(0,g.IX)((0,g.Z_)()),data:(0,g.Z_)(),programId:(0,g.Z_)()})]),pe=(0,g.oQ)(he,de,(t=>"accounts"in t?(0,g.Ue)(t,le):(0,g.Ue)(t,ue))),ge=(0,g.dt)({signatures:(0,g.IX)((0,g.Z_)()),message:(0,g.dt)({accountKeys:(0,g.IX)((0,g.dt)({pubkey:ct,signer:(0,g.O7)(),writable:(0,g.O7)()})),instructions:(0,g.IX)(pe),recentBlockhash:(0,g.Z_)()})}),be=(0,g.dt)({accountIndex:(0,g.Rx)(),mint:(0,g.Z_)(),uiTokenAmount:Ct}),fe=(0,g.dt)({err:St,fee:(0,g.Rx)(),innerInstructions:(0,g.jt)((0,g.AG)((0,g.IX)((0,g.dt)({index:(0,g.Rx)(),instructions:(0,g.IX)((0,g.dt)({accounts:(0,g.IX)((0,g.Rx)()),data:(0,g.Z_)(),programIdIndex:(0,g.Rx)()}))})))),preBalances:(0,g.IX)((0,g.Rx)()),postBalances:(0,g.IX)((0,g.Rx)()),logMessages:(0,g.jt)((0,g.AG)((0,g.IX)((0,g.Z_)()))),preTokenBalances:(0,g.jt)((0,g.AG)((0,g.IX)(be))),postTokenBalances:(0,g.jt)((0,g.AG)((0,g.IX)(be)))}),me=(0,g.dt)({err:St,fee:(0,g.Rx)(),innerInstructions:(0,g.jt)((0,g.AG)((0,g.IX)((0,g.dt)({index:(0,g.Rx)(),instructions:(0,g.IX)(pe)})))),preBalances:(0,g.IX)((0,g.Rx)()),postBalances:(0,g.IX)((0,g.Rx)()),logMessages:(0,g.jt)((0,g.AG)((0,g.IX)((0,g.Z_)()))),preTokenBalances:(0,g.jt)((0,g.AG)((0,g.IX)(be))),postTokenBalances:(0,g.jt)((0,g.AG)((0,g.IX)(be)))}),ye=pt((0,g.AG)((0,g.dt)({blockhash:(0,g.Z_)(),previousBlockhash:(0,g.Z_)(),parentSlot:(0,g.Rx)(),transactions:(0,g.IX)((0,g.dt)({transaction:ce,meta:(0,g.AG)(fe)})),rewards:(0,g.jt)((0,g.IX)((0,g.dt)({pubkey:(0,g.Z_)(),lamports:(0,g.Rx)(),postBalance:(0,g.AG)((0,g.Rx)()),rewardType:(0,g.AG)((0,g.Z_)())}))),blockTime:(0,g.AG)((0,g.Rx)())}))),we=pt((0,g.AG)((0,g.dt)({blockhash:(0,g.Z_)(),previousBlockhash:(0,g.Z_)(),parentSlot:(0,g.Rx)(),signatures:(0,g.IX)((0,g.Z_)()),blockTime:(0,g.AG)((0,g.Rx)())}))),ke=pt((0,g.AG)((0,g.dt)({slot:(0,g.Rx)(),meta:fe,blockTime:(0,g.jt)((0,g.AG)((0,g.Rx)())),transaction:ce}))),Se=pt((0,g.AG)((0,g.dt)({slot:(0,g.Rx)(),transaction:ge,meta:(0,g.AG)(me),blockTime:(0,g.jt)((0,g.AG)((0,g.Rx)()))}))),_e=gt((0,g.dt)({blockhash:(0,g.Z_)(),feeCalculator:(0,g.dt)({lamportsPerSignature:(0,g.Rx)()})})),Ie=(0,g.dt)({slot:(0,g.Rx)(),numTransactions:(0,g.Rx)(),numSlots:(0,g.Rx)(),samplePeriodSecs:(0,g.Rx)()}),Ae=pt((0,g.IX)(Ie)),xe=gt((0,g.AG)((0,g.dt)({feeCalculator:(0,g.dt)({lamportsPerSignature:(0,g.Rx)()})}))),Re=pt((0,g.Z_)()),ve=pt((0,g.Z_)()),Ee=(0,g.dt)({err:St,logs:(0,g.IX)((0,g.Z_)()),signature:(0,g.Z_)()}),Pe=(0,g.dt)({result:bt(Ee),subscription:(0,g.Rx)()});class We{constructor(t,e){(0,s.Z)(this,"_commitment",void 0),(0,s.Z)(this,"_confirmTransactionInitialTimeout",void 0),(0,s.Z)(this,"_rpcEndpoint",void 0),(0,s.Z)(this,"_rpcWsEndpoint",void 0),(0,s.Z)(this,"_rpcClient",void 0),(0,s.Z)(this,"_rpcRequest",void 0),(0,s.Z)(this,"_rpcBatchRequest",void 0),(0,s.Z)(this,"_rpcWebSocket",void 0),(0,s.Z)(this,"_rpcWebSocketConnected",!1),(0,s.Z)(this,"_rpcWebSocketHeartbeat",null),(0,s.Z)(this,"_rpcWebSocketIdleTimeout",null),(0,s.Z)(this,"_disableBlockhashCaching",!1),(0,s.Z)(this,"_pollingBlockhash",!1),(0,s.Z)(this,"_blockhashInfo",{recentBlockhash:null,lastFetch:0,transactionSignatures:[],simulatedSignatures:[]}),(0,s.Z)(this,"_accountChangeSubscriptionCounter",0),(0,s.Z)(this,"_accountChangeSubscriptions",{}),(0,s.Z)(this,"_programAccountChangeSubscriptionCounter",0),(0,s.Z)(this,"_programAccountChangeSubscriptions",{}),(0,s.Z)(this,"_rootSubscriptionCounter",0),(0,s.Z)(this,"_rootSubscriptions",{}),(0,s.Z)(this,"_signatureSubscriptionCounter",0),(0,s.Z)(this,"_signatureSubscriptions",{}),(0,s.Z)(this,"_slotSubscriptionCounter",0),(0,s.Z)(this,"_slotSubscriptions",{}),(0,s.Z)(this,"_logsSubscriptionCounter",0),(0,s.Z)(this,"_logsSubscriptions",{}),(0,s.Z)(this,"_slotUpdateSubscriptionCounter",0),(0,s.Z)(this,"_slotUpdateSubscriptions",{});let r=new URL(t);r.protocol;let n,i,o,a;var c;e&&"string"===typeof e?this._commitment=e:e&&(this._commitment=e.commitment,this._confirmTransactionInitialTimeout=e.confirmTransactionInitialTimeout,n=e.wsEndpoint,i=e.httpHeaders,o=e.fetchMiddleware,a=e.disableRetryOnRateLimit),this._rpcEndpoint=t,this._rpcWsEndpoint=n||function(t){let e=new URL(t);const r="https:"===e.protocol;return e.protocol=r?"wss:":"ws:",e.host="",""!==e.port&&(e.port=String(Number(e.port)+1)),e.toString()}(t),this._rpcClient=function(t,e,r,s,n){let i;return s&&(i=(t,e)=>new Promise(((r,n)=>{s(t,e,(async(t,e)=>{try{r(await nt(t,e))}catch(s){n(s)}}))}))),new(m())((async(e,s)=>{const o={method:"POST",body:e,agent:void 0,headers:Object.assign({"Content-Type":"application/json"},r||{})};try{let e,r=5,a=500;for(;e=i?await i(t,o):await nt(t,o),429===e.status&&!0!==n&&(r-=1,0!==r);)console.log(`Server responded with ${e.status} ${e.statusText}.  Retrying after ${a}ms delay...`),await M(a),a*=2;const c=await e.text();e.ok?s(null,c):s(new Error(`${e.status} ${e.statusText}: ${c}`))}catch(a){a instanceof Error&&s(a)}}),{})}(r.toString(),0,i,o,a),this._rpcRequest=(c=this._rpcClient,(t,e)=>new Promise(((r,s)=>{c.request(t,e,((t,e)=>{t?s(t):r(e)}))}))),this._rpcBatchRequest=function(t){return e=>new Promise(((r,s)=>{0===e.length&&r([]);const n=e.map((e=>t.request(e.methodName,e.args)));t.request(n,((t,e)=>{t?s(t):r(e)}))}))}(this._rpcClient),this._rpcWebSocket=new b.K(this._rpcWsEndpoint,{autoconnect:!1,max_reconnects:1/0}),this._rpcWebSocket.on("open",this._wsOnOpen.bind(this)),this._rpcWebSocket.on("error",this._wsOnError.bind(this)),this._rpcWebSocket.on("close",this._wsOnClose.bind(this)),this._rpcWebSocket.on("accountNotification",this._wsOnAccountNotification.bind(this)),this._rpcWebSocket.on("programNotification",this._wsOnProgramAccountNotification.bind(this)),this._rpcWebSocket.on("slotNotification",this._wsOnSlotNotification.bind(this)),this._rpcWebSocket.on("slotsUpdatesNotification",this._wsOnSlotUpdatesNotification.bind(this)),this._rpcWebSocket.on("signatureNotification",this._wsOnSignatureNotification.bind(this)),this._rpcWebSocket.on("rootNotification",this._wsOnRootNotification.bind(this)),this._rpcWebSocket.on("logsNotification",this._wsOnLogsNotification.bind(this))}get commitment(){return this._commitment}async getBalanceAndContext(t,e){const r=this._buildArgs([t.toBase58()],e),s=await this._rpcRequest("getBalance",r),n=(0,g.Ue)(s,gt((0,g.Rx)()));if("error"in n)throw new Error("failed to get balance for "+t.toBase58()+": "+n.error.message);return n.result}async getBalance(t,e){return await this.getBalanceAndContext(t,e).then((t=>t.value)).catch((e=>{throw new Error("failed to get balance of account "+t.toBase58()+": "+e)}))}async getBlockTime(t){const e=await this._rpcRequest("getBlockTime",[t]),r=(0,g.Ue)(e,pt((0,g.AG)((0,g.Rx)())));if("error"in r)throw new Error("failed to get block time for slot "+t+": "+r.error.message);return r.result}async getMinimumLedgerSlot(){const t=await this._rpcRequest("minimumLedgerSlot",[]),e=(0,g.Ue)(t,pt((0,g.Rx)()));if("error"in e)throw new Error("failed to get minimum ledger slot: "+e.error.message);return e.result}async getFirstAvailableBlock(){const t=await this._rpcRequest("getFirstAvailableBlock",[]),e=(0,g.Ue)(t,Wt);if("error"in e)throw new Error("failed to get first available block: "+e.error.message);return e.result}async getSupply(t){const e=this._buildArgs([],t),r=await this._rpcRequest("getSupply",e),s=(0,g.Ue)(r,Bt);if("error"in s)throw new Error("failed to get supply: "+s.error.message);return s.result}async getTokenSupply(t,e){const r=this._buildArgs([t.toBase58()],e),s=await this._rpcRequest("getTokenSupply",r),n=(0,g.Ue)(s,gt(Ct));if("error"in n)throw new Error("failed to get token supply: "+n.error.message);return n.result}async getTokenAccountBalance(t,e){const r=this._buildArgs([t.toBase58()],e),s=await this._rpcRequest("getTokenAccountBalance",r),n=(0,g.Ue)(s,gt(Ct));if("error"in n)throw new Error("failed to get token account balance: "+n.error.message);return n.result}async getTokenAccountsByOwner(t,e,r){let s=[t.toBase58()];"mint"in e?s.push({mint:e.mint.toBase58()}):s.push({programId:e.programId.toBase58()});const n=this._buildArgs(s,r,"base64"),i=await this._rpcRequest("getTokenAccountsByOwner",n),o=(0,g.Ue)(i,Ut);if("error"in o)throw new Error("failed to get token accounts owned by account "+t.toBase58()+": "+o.error.message);return o.result}async getParsedTokenAccountsByOwner(t,e,r){let s=[t.toBase58()];"mint"in e?s.push({mint:e.mint.toBase58()}):s.push({programId:e.programId.toBase58()});const n=this._buildArgs(s,r,"jsonParsed"),i=await this._rpcRequest("getTokenAccountsByOwner",n),o=(0,g.Ue)(i,Ot);if("error"in o)throw new Error("failed to get token accounts owned by account "+t.toBase58()+": "+o.error.message);return o.result}async getLargestAccounts(t){const e={...t,commitment:t&&t.commitment||this.commitment},r=e.filter||e.commitment?[e]:[],s=await this._rpcRequest("getLargestAccounts",r),n=(0,g.Ue)(s,qt);if("error"in n)throw new Error("failed to get largest accounts: "+n.error.message);return n.result}async getTokenLargestAccounts(t,e){const r=this._buildArgs([t.toBase58()],e),s=await this._rpcRequest("getTokenLargestAccounts",r),n=(0,g.Ue)(s,Tt);if("error"in n)throw new Error("failed to get token largest accounts: "+n.error.message);return n.result}async getAccountInfoAndContext(t,e){const r=this._buildArgs([t.toBase58()],e,"base64"),s=await this._rpcRequest("getAccountInfo",r),n=(0,g.Ue)(s,gt((0,g.AG)(zt)));if("error"in n)throw new Error("failed to get info about account "+t.toBase58()+": "+n.error.message);return n.result}async getParsedAccountInfo(t,e){const r=this._buildArgs([t.toBase58()],e,"jsonParsed"),s=await this._rpcRequest("getAccountInfo",r),n=(0,g.Ue)(s,gt((0,g.AG)(Nt)));if("error"in n)throw new Error("failed to get info about account "+t.toBase58()+": "+n.error.message);return n.result}async getAccountInfo(t,e){try{return(await this.getAccountInfoAndContext(t,e)).value}catch(r){throw new Error("failed to get info about account "+t.toBase58()+": "+r)}}async getMultipleAccountsInfo(t,e){const r=t.map((t=>t.toBase58())),s=this._buildArgs([r],e,"base64"),n=await this._rpcRequest("getMultipleAccounts",s),i=(0,g.Ue)(n,gt((0,g.IX)((0,g.AG)(zt))));if("error"in i)throw new Error("failed to get info for accounts "+r+": "+i.error.message);return i.result.value}async getStakeActivation(t,e,r){const s=this._buildArgs([t.toBase58()],e,void 0,void 0!==r?{epoch:r}:void 0),n=await this._rpcRequest("getStakeActivation",s),i=(0,g.Ue)(n,pt(Lt));if("error"in i)throw new Error(`failed to get Stake Activation ${t.toBase58()}: ${i.error.message}`);return i.result}async getProgramAccounts(t,e){const r={};let s,n;e&&("string"===typeof e?s=e:(s=e.commitment,n=e.encoding,e.dataSlice&&(r.dataSlice=e.dataSlice),e.filters&&(r.filters=e.filters)));const i=this._buildArgs([t.toBase58()],s,n||"base64",r),o=await this._rpcRequest("getProgramAccounts",i),a=(0,g.Ue)(o,pt((0,g.IX)(jt)));if("error"in a)throw new Error("failed to get accounts owned by program "+t.toBase58()+": "+a.error.message);return a.result}async getParsedProgramAccounts(t,e){const r={};let s;e&&("string"===typeof e?s=e:(s=e.commitment,e.filters&&(r.filters=e.filters)));const n=this._buildArgs([t.toBase58()],s,"jsonParsed",r),i=await this._rpcRequest("getProgramAccounts",n),o=(0,g.Ue)(i,pt((0,g.IX)(Gt)));if("error"in o)throw new Error("failed to get accounts owned by program "+t.toBase58()+": "+o.error.message);return o.result}async confirmTransaction(t,e){let r;try{r=l().decode(t)}catch(u){throw new Error("signature must be base58 encoded: "+t)}Z(64===r.length,"signature has invalid length");const s=Date.now(),n=e||this.commitment;let i,o=null;const a=new Promise(((e,r)=>{try{i=this.onSignature(t,((t,r)=>{i=void 0,o={context:r,value:t},e(null)}),n)}catch(u){r(u)}}));let c=this._confirmTransactionInitialTimeout||6e4;switch(n){case"processed":case"recent":case"single":case"confirmed":case"singleGossip":c=this._confirmTransactionInitialTimeout||3e4}try{await function(t,e){let r;const s=new Promise((t=>{r=setTimeout((()=>t(null)),e)}));return Promise.race([t,s]).then((t=>(clearTimeout(r),t)))}(a,c)}finally{i&&this.removeSignatureListener(i)}if(null===o){const e=(Date.now()-s)/1e3;throw new Error(`Transaction was not confirmed in ${e.toFixed(2)} seconds. It is unknown if it succeeded or failed. Check signature ${t} using the Solana Explorer or CLI tools.`)}return o}async getClusterNodes(){const t=await this._rpcRequest("getClusterNodes",[]),e=(0,g.Ue)(t,pt((0,g.IX)(ee)));if("error"in e)throw new Error("failed to get cluster nodes: "+e.error.message);return e.result}async getVoteAccounts(t){const e=this._buildArgs([],t),r=await this._rpcRequest("getVoteAccounts",e),s=(0,g.Ue)(r,se);if("error"in s)throw new Error("failed to get vote accounts: "+s.error.message);return s.result}async getSlot(t){const e=this._buildArgs([],t),r=await this._rpcRequest("getSlot",e),s=(0,g.Ue)(r,pt((0,g.Rx)()));if("error"in s)throw new Error("failed to get slot: "+s.error.message);return s.result}async getSlotLeader(t){const e=this._buildArgs([],t),r=await this._rpcRequest("getSlotLeader",e),s=(0,g.Ue)(r,pt((0,g.Z_)()));if("error"in s)throw new Error("failed to get slot leader: "+s.error.message);return s.result}async getSlotLeaders(t,e){const r=[t,e],s=await this._rpcRequest("getSlotLeaders",r),n=(0,g.Ue)(s,pt((0,g.IX)(ct)));if("error"in n)throw new Error("failed to get slot leaders: "+n.error.message);return n.result}async getSignatureStatus(t,e){const{context:r,value:s}=await this.getSignatureStatuses([t],e);Z(1===s.length);return{context:r,value:s[0]}}async getSignatureStatuses(t,e){const r=[t];e&&r.push(e);const s=await this._rpcRequest("getSignatureStatuses",r),n=(0,g.Ue)(s,oe);if("error"in n)throw new Error("failed to get signature status: "+n.error.message);return n.result}async getTransactionCount(t){const e=this._buildArgs([],t),r=await this._rpcRequest("getTransactionCount",e),s=(0,g.Ue)(r,pt((0,g.Rx)()));if("error"in s)throw new Error("failed to get transaction count: "+s.error.message);return s.result}async getTotalSupply(t){const e=this._buildArgs([],t),r=await this._rpcRequest("getSupply",e),s=(0,g.Ue)(r,Bt);if("error"in s)throw new Error("failed to get total supply: "+s.error.message);return s.result.value.total}async getInflationGovernor(t){const e=this._buildArgs([],t),r=await this._rpcRequest("getInflationGovernor",e),s=(0,g.Ue)(r,Rt);if("error"in s)throw new Error("failed to get inflation: "+s.error.message);return s.result}async getInflationReward(t,e,r){const s=this._buildArgs([t.map((t=>t.toBase58()))],r,void 0,{epoch:e}),n=await this._rpcRequest("getInflationReward",s),i=(0,g.Ue)(n,mt);if("error"in i)throw new Error("failed to get inflation reward: "+i.error.message);return i.result}async getEpochInfo(t){const e=this._buildArgs([],t),r=await this._rpcRequest("getEpochInfo",e),s=(0,g.Ue)(r,vt);if("error"in s)throw new Error("failed to get epoch info: "+s.error.message);return s.result}async getEpochSchedule(){const t=await this._rpcRequest("getEpochSchedule",[]),e=(0,g.Ue)(t,Et);if("error"in e)throw new Error("failed to get epoch schedule: "+e.error.message);const r=e.result;return new ot(r.slotsPerEpoch,r.leaderScheduleSlotOffset,r.warmup,r.firstNormalEpoch,r.firstNormalSlot)}async getLeaderSchedule(){const t=await this._rpcRequest("getLeaderSchedule",[]),e=(0,g.Ue)(t,Pt);if("error"in e)throw new Error("failed to get leader schedule: "+e.error.message);return e.result}async getMinimumBalanceForRentExemption(t,e){const r=this._buildArgs([t],e),s=await this._rpcRequest("getMinimumBalanceForRentExemption",r),n=(0,g.Ue)(s,ae);return"error"in n?(console.warn("Unable to fetch minimum balance for rent exemption"),0):n.result}async getRecentBlockhashAndContext(t){const e=this._buildArgs([],t),r=await this._rpcRequest("getRecentBlockhash",e),s=(0,g.Ue)(r,_e);if("error"in s)throw new Error("failed to get recent blockhash: "+s.error.message);return s.result}async getRecentPerformanceSamples(t){const e=this._buildArgs(t?[t]:[]),r=await this._rpcRequest("getRecentPerformanceSamples",e),s=(0,g.Ue)(r,Ae);if("error"in s)throw new Error("failed to get recent performance samples: "+s.error.message);return s.result}async getFeeCalculatorForBlockhash(t,e){const r=this._buildArgs([t],e),s=await this._rpcRequest("getFeeCalculatorForBlockhash",r),n=(0,g.Ue)(s,xe);if("error"in n)throw new Error("failed to get fee calculator: "+n.error.message);const{context:i,value:o}=n.result;return{context:i,value:null!==o?o.feeCalculator:null}}async getRecentBlockhash(t){try{return(await this.getRecentBlockhashAndContext(t)).value}catch(e){throw new Error("failed to get recent blockhash: "+e)}}async getVersion(){const t=await this._rpcRequest("getVersion",[]),e=(0,g.Ue)(t,pt(At));if("error"in e)throw new Error("failed to get version: "+e.error.message);return e.result}async getGenesisHash(){const t=await this._rpcRequest("getGenesisHash",[]),e=(0,g.Ue)(t,pt((0,g.Z_)()));if("error"in e)throw new Error("failed to get genesis hash: "+e.error.message);return e.result}async getBlock(t,e){const r=this._buildArgsAtLeastConfirmed([t],e&&e.commitment),s=await this._rpcRequest("getConfirmedBlock",r),n=(0,g.Ue)(s,ye);if("error"in n)throw new Error("failed to get confirmed block: "+n.error.message);const i=n.result;return i?{...i,transactions:i.transactions.map((({transaction:t,meta:e})=>{const r=new U(t.message);return{meta:e,transaction:{...t,message:r}}}))}:i}async getTransaction(t,e){const r=this._buildArgsAtLeastConfirmed([t],e&&e.commitment),s=await this._rpcRequest("getConfirmedTransaction",r),n=(0,g.Ue)(s,ke);if("error"in n)throw new Error("failed to get confirmed transaction: "+n.error.message);const i=n.result;return i?{...i,transaction:{...i.transaction,message:new U(i.transaction.message)}}:i}async getConfirmedBlock(t,e){const r=await this.getBlock(t,{commitment:e});if(!r)throw new Error("Confirmed block "+t+" not found");return{...r,transactions:r.transactions.map((({transaction:t,meta:e})=>({meta:e,transaction:j.populate(t.message,t.signatures)})))}}async getBlocks(t,e,r){const s=this._buildArgsAtLeastConfirmed(void 0!==e?[t,e]:[t],r),n=await this._rpcRequest("getConfirmedBlocks",s),i=(0,g.Ue)(n,pt((0,g.IX)((0,g.Rx)())));if("error"in i)throw new Error("failed to get blocks: "+i.error.message);return i.result}async getConfirmedBlockSignatures(t,e){const r=this._buildArgsAtLeastConfirmed([t],e,void 0,{transactionDetails:"signatures",rewards:!1}),s=await this._rpcRequest("getConfirmedBlock",r),n=(0,g.Ue)(s,we);if("error"in n)throw new Error("failed to get confirmed block: "+n.error.message);const i=n.result;if(!i)throw new Error("Confirmed block "+t+" not found");return i}async getConfirmedTransaction(t,e){const r=await this.getTransaction(t,{commitment:e});if(!r)return r;const{message:s,signatures:n}=r.transaction;return{...r,transaction:j.populate(s,n)}}async getParsedConfirmedTransaction(t,e){const r=this._buildArgsAtLeastConfirmed([t],e,"jsonParsed"),s=await this._rpcRequest("getConfirmedTransaction",r),n=(0,g.Ue)(s,Se);if("error"in n)throw new Error("failed to get confirmed transaction: "+n.error.message);return n.result}async getParsedConfirmedTransactions(t,e){const r=t.map((t=>({methodName:"getConfirmedTransaction",args:this._buildArgsAtLeastConfirmed([t],e,"jsonParsed")})));return(await this._rpcBatchRequest(r)).map((t=>{const e=(0,g.Ue)(t,Se);if("error"in e)throw new Error("failed to get confirmed transactions: "+e.error.message);return e.result}))}async getConfirmedSignaturesForAddress(t,e,r){let s={},n=await this.getFirstAvailableBlock();for(;!("until"in s)&&!(--e<=0||e<n);)try{const t=await this.getConfirmedBlockSignatures(e,"finalized");t.signatures.length>0&&(s.until=t.signatures[t.signatures.length-1].toString())}catch(o){if(o instanceof Error&&o.message.includes("skipped"))continue;throw o}let i=await this.getSlot("finalized");for(;!("before"in s)&&!(++r>i);)try{const t=await this.getConfirmedBlockSignatures(r);t.signatures.length>0&&(s.before=t.signatures[t.signatures.length-1].toString())}catch(o){if(o instanceof Error&&o.message.includes("skipped"))continue;throw o}return(await this.getConfirmedSignaturesForAddress2(t,s)).map((t=>t.signature))}async getConfirmedSignaturesForAddress2(t,e,r){const s=this._buildArgsAtLeastConfirmed([t.toBase58()],r,void 0,e),n=await this._rpcRequest("getConfirmedSignaturesForAddress2",s),i=(0,g.Ue)(n,Xt);if("error"in i)throw new Error("failed to get confirmed signatures for address: "+i.error.message);return i.result}async getSignaturesForAddress(t,e,r){const s=this._buildArgsAtLeastConfirmed([t.toBase58()],r,void 0,e),n=await this._rpcRequest("getSignaturesForAddress",s),i=(0,g.Ue)(n,Mt);if("error"in i)throw new Error("failed to get signatures for address: "+i.error.message);return i.result}async getNonceAndContext(t,e){const{context:r,value:s}=await this.getAccountInfoAndContext(t,e);let n=null;return null!==s&&(n=V.fromAccountData(s.data)),{context:r,value:n}}async getNonce(t,e){return await this.getNonceAndContext(t,e).then((t=>t.value)).catch((e=>{throw new Error("failed to get nonce for account "+t.toBase58()+": "+e)}))}async requestAirdrop(t,e){const r=await this._rpcRequest("requestAirdrop",[t.toBase58(),e]),s=(0,g.Ue)(r,Re);if("error"in s)throw new Error("airdrop to "+t.toBase58()+" failed: "+s.error.message);return s.result}async _recentBlockhash(t){if(!t){for(;this._pollingBlockhash;)await M(100);const t=Date.now()-this._blockhashInfo.lastFetch>=3e4;if(null!==this._blockhashInfo.recentBlockhash&&!t)return this._blockhashInfo.recentBlockhash}return await this._pollNewBlockhash()}async _pollNewBlockhash(){this._pollingBlockhash=!0;try{const t=Date.now();for(let e=0;e<50;e++){const{blockhash:t}=await this.getRecentBlockhash("finalized");if(this._blockhashInfo.recentBlockhash!=t)return this._blockhashInfo={recentBlockhash:t,lastFetch:Date.now(),transactionSignatures:[],simulatedSignatures:[]},t;await M(200)}throw new Error(`Unable to obtain a new blockhash after ${Date.now()-t}ms`)}finally{this._pollingBlockhash=!1}}async simulateTransaction(t,e,r){let s;if(s=t instanceof j?t:j.populate(t),s.nonceInfo&&e)s.sign(...e);else{let t=this._disableBlockhashCaching;for(;s.recentBlockhash=await this._recentBlockhash(t),e;){if(s.sign(...e),!s.signature)throw new Error("!signature");const r=s.signature.toString("base64");if(!this._blockhashInfo.simulatedSignatures.includes(r)&&!this._blockhashInfo.transactionSignatures.includes(r)){this._blockhashInfo.simulatedSignatures.push(r);break}t=!0}}const n=s._compile(),i=n.serialize(),o=s._serialize(i).toString("base64"),a={encoding:"base64",commitment:this.commitment};if(r){const t=(Array.isArray(r)?r:n.nonProgramIds()).map((t=>t.toBase58()));a.accounts={encoding:"base64",addresses:t}}e&&(a.sigVerify=!0);const c=[o,a],u=await this._rpcRequest("simulateTransaction",c),l=(0,g.Ue)(u,xt);if("error"in l){let t;if("data"in l.error&&(t=l.error.data.logs,t&&Array.isArray(t))){const e="\n    ",r=e+t.join(e);console.error(l.error.message,r)}throw new at("failed to simulate transaction: "+l.error.message,t)}return l.result}async sendTransaction(t,e,r){if(t.nonceInfo)t.sign(...e);else{let r=this._disableBlockhashCaching;for(;;){if(t.recentBlockhash=await this._recentBlockhash(r),t.sign(...e),!t.signature)throw new Error("!signature");const s=t.signature.toString("base64");if(!this._blockhashInfo.transactionSignatures.includes(s)){this._blockhashInfo.transactionSignatures.push(s);break}r=!0}}const s=t.serialize();return await this.sendRawTransaction(s,r)}async sendRawTransaction(t,e){const r=S(t).toString("base64");return await this.sendEncodedTransaction(r,e)}async sendEncodedTransaction(t,e){const r={encoding:"base64"},s=e&&e.skipPreflight,n=e&&e.preflightCommitment||this.commitment;s&&(r.skipPreflight=s),n&&(r.preflightCommitment=n);const i=[t,r],o=await this._rpcRequest("sendTransaction",i),a=(0,g.Ue)(o,ve);if("error"in a){let t;if("data"in a.error&&(t=a.error.data.logs,t&&Array.isArray(t))){const e="\n    ",r=e+t.join(e);console.error(a.error.message,r)}throw new at("failed to send transaction: "+a.error.message,t)}return a.result}_wsOnOpen(){this._rpcWebSocketConnected=!0,this._rpcWebSocketHeartbeat=setInterval((()=>{this._rpcWebSocket.notify("ping").catch((()=>{}))}),5e3),this._updateSubscriptions()}_wsOnError(t){console.error("ws error:",t.message)}_wsOnClose(t){this._rpcWebSocketHeartbeat&&(clearInterval(this._rpcWebSocketHeartbeat),this._rpcWebSocketHeartbeat=null),1e3!==t?this._resetSubscriptions():this._updateSubscriptions()}async _subscribe(t,e,r){if(null==t.subscriptionId){t.subscriptionId="subscribing";try{const s=await this._rpcWebSocket.call(e,r);"number"===typeof s&&"subscribing"===t.subscriptionId&&(t.subscriptionId=s)}catch(s){"subscribing"===t.subscriptionId&&(t.subscriptionId=null),s instanceof Error&&console.error(`${e} error for argument`,r,s.message)}}}async _unsubscribe(t,e){const r=t.subscriptionId;if(null!=r&&"string"!=typeof r){const t=r;try{await this._rpcWebSocket.call(e,[t])}catch(s){s instanceof Error&&console.error(`${e} error:`,s.message)}}}_resetSubscriptions(){Object.values(this._accountChangeSubscriptions).forEach((t=>t.subscriptionId=null)),Object.values(this._programAccountChangeSubscriptions).forEach((t=>t.subscriptionId=null)),Object.values(this._rootSubscriptions).forEach((t=>t.subscriptionId=null)),Object.values(this._signatureSubscriptions).forEach((t=>t.subscriptionId=null)),Object.values(this._slotSubscriptions).forEach((t=>t.subscriptionId=null)),Object.values(this._slotUpdateSubscriptions).forEach((t=>t.subscriptionId=null))}_updateSubscriptions(){const t=Object.keys(this._accountChangeSubscriptions).map(Number),e=Object.keys(this._programAccountChangeSubscriptions).map(Number),r=Object.keys(this._slotSubscriptions).map(Number),s=Object.keys(this._slotUpdateSubscriptions).map(Number),n=Object.keys(this._signatureSubscriptions).map(Number),i=Object.keys(this._rootSubscriptions).map(Number),o=Object.keys(this._logsSubscriptions).map(Number);if(0!==t.length||0!==e.length||0!==r.length||0!==s.length||0!==n.length||0!==i.length||0!==o.length)if(null!==this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketConnected=!0),this._rpcWebSocketConnected){for(let e of t){const t=this._accountChangeSubscriptions[e];this._subscribe(t,"accountSubscribe",this._buildArgs([t.publicKey],t.commitment,"base64"))}for(let t of e){const e=this._programAccountChangeSubscriptions[t];this._subscribe(e,"programSubscribe",this._buildArgs([e.programId],e.commitment,"base64",{filters:e.filters}))}for(let t of r){const e=this._slotSubscriptions[t];this._subscribe(e,"slotSubscribe",[])}for(let t of s){const e=this._slotUpdateSubscriptions[t];this._subscribe(e,"slotsUpdatesSubscribe",[])}for(let t of n){const e=this._signatureSubscriptions[t],r=[e.signature];e.options&&r.push(e.options),this._subscribe(e,"signatureSubscribe",r)}for(let t of i){const e=this._rootSubscriptions[t];this._subscribe(e,"rootSubscribe",[])}for(let t of o){const e=this._logsSubscriptions[t];let r;r="object"===typeof e.filter?{mentions:[e.filter.toString()]}:e.filter,this._subscribe(e,"logsSubscribe",this._buildArgs([r],e.commitment))}}else this._rpcWebSocket.connect();else this._rpcWebSocketConnected&&(this._rpcWebSocketConnected=!1,this._rpcWebSocketIdleTimeout=setTimeout((()=>{this._rpcWebSocketIdleTimeout=null,this._rpcWebSocket.close()}),500))}_wsOnAccountNotification(t){const e=(0,g.Ue)(t,Dt);for(const r of Object.values(this._accountChangeSubscriptions))if(r.subscriptionId===e.subscription)return void r.callback(e.result.value,e.result.context)}onAccountChange(t,e,r){const s=++this._accountChangeSubscriptionCounter;return this._accountChangeSubscriptions[s]={publicKey:t.toBase58(),callback:e,commitment:r,subscriptionId:null},this._updateSubscriptions(),s}async removeAccountChangeListener(t){if(!this._accountChangeSubscriptions[t])throw new Error(`Unknown account change id: ${t}`);{const e=this._accountChangeSubscriptions[t];delete this._accountChangeSubscriptions[t],await this._unsubscribe(e,"accountUnsubscribe"),this._updateSubscriptions()}}_wsOnProgramAccountNotification(t){const e=(0,g.Ue)(t,$t);for(const r of Object.values(this._programAccountChangeSubscriptions))if(r.subscriptionId===e.subscription){const{value:t,context:s}=e.result;return void r.callback({accountId:t.pubkey,accountInfo:t.account},s)}}onProgramAccountChange(t,e,r,s){const n=++this._programAccountChangeSubscriptionCounter;return this._programAccountChangeSubscriptions[n]={programId:t.toBase58(),callback:e,commitment:r,subscriptionId:null,filters:s},this._updateSubscriptions(),n}async removeProgramAccountChangeListener(t){if(!this._programAccountChangeSubscriptions[t])throw new Error(`Unknown program account change id: ${t}`);{const e=this._programAccountChangeSubscriptions[t];delete this._programAccountChangeSubscriptions[t],await this._unsubscribe(e,"programUnsubscribe"),this._updateSubscriptions()}}onLogs(t,e,r){const s=++this._logsSubscriptionCounter;return this._logsSubscriptions[s]={filter:t,callback:e,commitment:r,subscriptionId:null},this._updateSubscriptions(),s}async removeOnLogsListener(t){if(!this._logsSubscriptions[t])throw new Error(`Unknown logs id: ${t}`);const e=this._logsSubscriptions[t];delete this._logsSubscriptions[t],await this._unsubscribe(e,"logsUnsubscribe"),this._updateSubscriptions()}_wsOnLogsNotification(t){const e=(0,g.Ue)(t,Pe),r=Object.keys(this._logsSubscriptions).map(Number);for(let s of r){const t=this._logsSubscriptions[s];if(t.subscriptionId===e.subscription)return void t.callback(e.result.value,e.result.context)}}_wsOnSlotNotification(t){const e=(0,g.Ue)(t,Vt);for(const r of Object.values(this._slotSubscriptions))if(r.subscriptionId===e.subscription)return void r.callback(e.result)}onSlotChange(t){const e=++this._slotSubscriptionCounter;return this._slotSubscriptions[e]={callback:t,subscriptionId:null},this._updateSubscriptions(),e}async removeSlotChangeListener(t){if(!this._slotSubscriptions[t])throw new Error(`Unknown slot change id: ${t}`);{const e=this._slotSubscriptions[t];delete this._slotSubscriptions[t],await this._unsubscribe(e,"slotUnsubscribe"),this._updateSubscriptions()}}_wsOnSlotUpdatesNotification(t){const e=(0,g.Ue)(t,Jt);for(const r of Object.values(this._slotUpdateSubscriptions))if(r.subscriptionId===e.subscription)return void r.callback(e.result)}onSlotUpdate(t){const e=++this._slotUpdateSubscriptionCounter;return this._slotUpdateSubscriptions[e]={callback:t,subscriptionId:null},this._updateSubscriptions(),e}async removeSlotUpdateListener(t){if(!this._slotUpdateSubscriptions[t])throw new Error(`Unknown slot update id: ${t}`);{const e=this._slotUpdateSubscriptions[t];delete this._slotUpdateSubscriptions[t],await this._unsubscribe(e,"slotsUpdatesUnsubscribe"),this._updateSubscriptions()}}_buildArgs(t,e,r,s){const n=e||this._commitment;if(n||r||s){let e={};r&&(e.encoding=r),n&&(e.commitment=n),s&&(e=Object.assign(e,s)),t.push(e)}return t}_buildArgsAtLeastConfirmed(t,e,r,s){const n=e||this._commitment;if(n&&!["confirmed","finalized"].includes(n))throw new Error("Using Connection with default commitment: `"+this._commitment+"`, but method requires at least `confirmed`");return this._buildArgs(t,e,r,s)}_wsOnSignatureNotification(t){const e=(0,g.Ue)(t,Yt);for(const[r,s]of Object.entries(this._signatureSubscriptions))if(s.subscriptionId===e.subscription)return void("receivedSignature"===e.result.value?s.callback({type:"received"},e.result.context):(delete this._signatureSubscriptions[Number(r)],this._updateSubscriptions(),s.callback({type:"status",result:e.result.value},e.result.context)))}onSignature(t,e,r){const s=++this._signatureSubscriptionCounter;return this._signatureSubscriptions[s]={signature:t,callback:(t,r)=>{"status"===t.type&&e(t.result,r)},options:{commitment:r},subscriptionId:null},this._updateSubscriptions(),s}onSignatureWithOptions(t,e,r){const s=++this._signatureSubscriptionCounter;return this._signatureSubscriptions[s]={signature:t,callback:e,options:r,subscriptionId:null},this._updateSubscriptions(),s}async removeSignatureListener(t){if(!this._signatureSubscriptions[t])throw new Error(`Unknown signature result id: ${t}`);{const e=this._signatureSubscriptions[t];delete this._signatureSubscriptions[t],await this._unsubscribe(e,"signatureUnsubscribe"),this._updateSubscriptions()}}_wsOnRootNotification(t){const e=(0,g.Ue)(t,te);for(const r of Object.values(this._rootSubscriptions))if(r.subscriptionId===e.subscription)return void r.callback(e.result)}onRootChange(t){const e=++this._rootSubscriptionCounter;return this._rootSubscriptions[e]={callback:t,subscriptionId:null},this._updateSubscriptions(),e}async removeRootChangeListener(t){if(!this._rootSubscriptions[t])throw new Error(`Unknown root change id: ${t}`);{const e=this._rootSubscriptions[t];delete this._rootSubscriptions[t],await this._unsubscribe(e,"rootUnsubscribe"),this._updateSubscriptions()}}}class Be{constructor(t){(0,s.Z)(this,"_keypair",void 0),this._keypair=t||n.sign.keyPair()}static generate(){return new Be(n.sign.keyPair())}static fromSecretKey(t,e){const r=n.sign.keyPair.fromSecretKey(t);if(!e||!e.skipValidation){const t=(new TextEncoder).encode("@solana/web3.js-validation-v1"),e=n.sign.detached(t,r.secretKey);if(!n.sign.detached.verify(t,e,r.publicKey))throw new Error("provided secretKey is invalid")}return new Be(r)}static fromSeed(t){return new Be(n.sign.keyPair.fromSeed(t))}get publicKey(){return new A(this._keypair.publicKey)}get secretKey(){return this._keypair.secretKey}}const Ce=p.struct([p.u8("numSignatures"),p.u8("padding"),p.u16("signatureOffset"),p.u16("signatureInstructionIndex"),p.u16("publicKeyOffset"),p.u16("publicKeyInstructionIndex"),p.u16("messageDataOffset"),p.u16("messageDataSize"),p.u16("messageInstructionIndex")]);class Te{constructor(){}static createInstructionWithPublicKey(t){const{publicKey:e,message:r,signature:s,instructionIndex:n}=t;Z(32===e.length,`Public Key must be 32 bytes but received ${e.length} bytes`),Z(64===s.length,`Signature must be 64 bytes but received ${s.length} bytes`);const i=Ce.span,a=i+e.length,c=a+s.length,u=o.lW.alloc(c+r.length);return Ce.encode({numSignatures:1,padding:0,signatureOffset:a,signatureInstructionIndex:n,publicKeyOffset:i,publicKeyInstructionIndex:n,messageDataOffset:c,messageDataSize:r.length,messageInstructionIndex:n},u),u.fill(e,i),u.fill(s,a),u.fill(r,c),new z({keys:[],programId:Te.programId,data:u})}static createInstructionWithPrivateKey(t){const{privateKey:e,message:r,instructionIndex:s}=t;Z(64===e.length,`Private key must be 64 bytes but received ${e.length} bytes`);try{const t=Be.fromSecretKey(e),n=t.publicKey.toBytes(),o=i().sign.detached(r,t.secretKey);return this.createInstructionWithPublicKey({publicKey:n,message:r,signature:o,instructionIndex:s})}catch(n){throw new Error(`Error creating instruction; ${n}`)}}}(0,s.Z)(Te,"programId",new A("Ed25519SigVerify111111111111111111111111111"));const Ue=new A("StakeConfig11111111111111111111111111111111");class Ze{constructor(t,e,r){(0,s.Z)(this,"unixTimestamp",void 0),(0,s.Z)(this,"epoch",void 0),(0,s.Z)(this,"custodian",void 0),this.unixTimestamp=t,this.epoch=e,this.custodian=r}}(0,s.Z)(Ze,"default",new Ze(0,0,A.default));const Oe=Object.freeze({Initialize:{index:0,layout:p.struct([p.u32("instruction"),((t="authorized")=>p.struct([W("staker"),W("withdrawer")],t))(),((t="lockup")=>p.struct([p.ns64("unixTimestamp"),p.ns64("epoch"),W("custodian")],t))()])},Authorize:{index:1,layout:p.struct([p.u32("instruction"),W("newAuthorized"),p.u32("stakeAuthorizationType")])},Delegate:{index:2,layout:p.struct([p.u32("instruction")])},Split:{index:3,layout:p.struct([p.u32("instruction"),p.ns64("lamports")])},Withdraw:{index:4,layout:p.struct([p.u32("instruction"),p.ns64("lamports")])},Deactivate:{index:5,layout:p.struct([p.u32("instruction")])},Merge:{index:7,layout:p.struct([p.u32("instruction")])},AuthorizeWithSeed:{index:8,layout:p.struct([p.u32("instruction"),W("newAuthorized"),p.u32("stakeAuthorizationType"),B("authoritySeed"),W("authorityOwner")])}});Object.freeze({Staker:{index:0},Withdrawer:{index:1}});class qe{constructor(){}static initialize(t){const{stakePubkey:e,authorized:r,lockup:s}=t,n=s||Ze.default,i=D(Oe.Initialize,{authorized:{staker:S(r.staker.toBuffer()),withdrawer:S(r.withdrawer.toBuffer())},lockup:{unixTimestamp:n.unixTimestamp,epoch:n.epoch,custodian:S(n.custodian.toBuffer())}}),o={keys:[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:G,isSigner:!1,isWritable:!1}],programId:this.programId,data:i};return new z(o)}static createAccountWithSeed(t){const e=new j;e.add(J.createAccountWithSeed({fromPubkey:t.fromPubkey,newAccountPubkey:t.stakePubkey,basePubkey:t.basePubkey,seed:t.seed,lamports:t.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:s,lockup:n}=t;return e.add(this.initialize({stakePubkey:r,authorized:s,lockup:n}))}static createAccount(t){const e=new j;e.add(J.createAccount({fromPubkey:t.fromPubkey,newAccountPubkey:t.stakePubkey,lamports:t.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:s,lockup:n}=t;return e.add(this.initialize({stakePubkey:r,authorized:s,lockup:n}))}static delegate(t){const{stakePubkey:e,authorizedPubkey:r,votePubkey:s}=t,n=D(Oe.Delegate);return(new j).add({keys:[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!1,isWritable:!1},{pubkey:K,isSigner:!1,isWritable:!1},{pubkey:L,isSigner:!1,isWritable:!1},{pubkey:Ue,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:n})}static authorize(t){const{stakePubkey:e,authorizedPubkey:r,newAuthorizedPubkey:s,stakeAuthorizationType:n,custodianPubkey:i}=t,o=D(Oe.Authorize,{newAuthorized:S(s.toBuffer()),stakeAuthorizationType:n.index}),a=[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:K,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return i&&a.push({pubkey:i,isSigner:!1,isWritable:!1}),(new j).add({keys:a,programId:this.programId,data:o})}static authorizeWithSeed(t){const{stakePubkey:e,authorityBase:r,authoritySeed:s,authorityOwner:n,newAuthorizedPubkey:i,stakeAuthorizationType:o,custodianPubkey:a}=t,c=D(Oe.AuthorizeWithSeed,{newAuthorized:S(i.toBuffer()),stakeAuthorizationType:o.index,authoritySeed:s,authorityOwner:S(n.toBuffer())}),u=[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1},{pubkey:K,isSigner:!1,isWritable:!1}];return a&&u.push({pubkey:a,isSigner:!1,isWritable:!1}),(new j).add({keys:u,programId:this.programId,data:c})}static split(t){const{stakePubkey:e,authorizedPubkey:r,splitStakePubkey:s,lamports:n}=t,i=new j;i.add(J.createAccount({fromPubkey:r,newAccountPubkey:s,lamports:0,space:this.space,programId:this.programId}));const o=D(Oe.Split,{lamports:n});return i.add({keys:[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:o})}static merge(t){const{stakePubkey:e,sourceStakePubKey:r,authorizedPubkey:s}=t,n=D(Oe.Merge);return(new j).add({keys:[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:K,isSigner:!1,isWritable:!1},{pubkey:L,isSigner:!1,isWritable:!1},{pubkey:s,isSigner:!0,isWritable:!1}],programId:this.programId,data:n})}static withdraw(t){const{stakePubkey:e,authorizedPubkey:r,toPubkey:s,lamports:n,custodianPubkey:i}=t,o=D(Oe.Withdraw,{lamports:n}),a=[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!1,isWritable:!0},{pubkey:K,isSigner:!1,isWritable:!1},{pubkey:L,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return i&&a.push({pubkey:i,isSigner:!1,isWritable:!1}),(new j).add({keys:a,programId:this.programId,data:o})}static deactivate(t){const{stakePubkey:e,authorizedPubkey:r}=t,s=D(Oe.Deactivate);return(new j).add({keys:[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:K,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:s})}}(0,s.Z)(qe,"programId",new A("Stake11111111111111111111111111111111111111")),(0,s.Z)(qe,"space",200);const{publicKeyCreate:ze,ecdsaSign:je}=w(),Ke=p.struct([p.u8("numSignatures"),p.u16("signatureOffset"),p.u8("signatureInstructionIndex"),p.u16("ethAddressOffset"),p.u8("ethAddressInstructionIndex"),p.u16("messageDataOffset"),p.u16("messageDataSize"),p.u8("messageInstructionIndex"),p.blob(20,"ethAddress"),p.blob(64,"signature"),p.u8("recoveryId")]);class Ne{constructor(){}static publicKeyToEthAddress(t){Z(64===t.length,`Public key must be 64 bytes but received ${t.length} bytes`);try{return o.lW.from(k.keccak_256.update(S(t)).digest()).slice(-20)}catch(e){throw new Error(`Error constructing Ethereum address: ${e}`)}}static createInstructionWithPublicKey(t){const{publicKey:e,message:r,signature:s,recoveryId:n,instructionIndex:i}=t;return Ne.createInstructionWithEthAddress({ethAddress:Ne.publicKeyToEthAddress(e),message:r,signature:s,recoveryId:n,instructionIndex:i})}static createInstructionWithEthAddress(t){const{ethAddress:e,message:r,signature:s,recoveryId:n,instructionIndex:i=0}=t;let a;a="string"===typeof e?e.startsWith("0x")?o.lW.from(e.substr(2),"hex"):o.lW.from(e,"hex"):e,Z(20===a.length,`Address must be 20 bytes but received ${a.length} bytes`);const c=12+a.length,u=c+s.length+1,l=o.lW.alloc(Ke.span+r.length);return Ke.encode({numSignatures:1,signatureOffset:c,signatureInstructionIndex:i,ethAddressOffset:12,ethAddressInstructionIndex:i,messageDataOffset:u,messageDataSize:r.length,messageInstructionIndex:i,signature:S(s),ethAddress:S(a),recoveryId:n},l),l.fill(S(r),Ke.span),new z({keys:[],programId:Ne.programId,data:l})}static createInstructionWithPrivateKey(t){const{privateKey:e,message:r,instructionIndex:s}=t;Z(32===e.length,`Private key must be 32 bytes but received ${e.length} bytes`);try{const t=S(e),n=ze(t,!1).slice(1),i=o.lW.from(k.keccak_256.update(S(r)).digest()),{signature:a,recid:c}=je(i,t);return this.createInstructionWithPublicKey({publicKey:n,message:r,signature:a,recoveryId:c,instructionIndex:s})}catch(n){throw new Error(`Error creating instruction; ${n}`)}}}(0,s.Z)(Ne,"programId",new A("KeccakSecp256k11111111111111111111111111111"));new A("Va1idator1nfo111111111111111111111111111111"),(0,g.dt)({name:(0,g.Z_)(),website:(0,g.jt)((0,g.Z_)()),details:(0,g.jt)((0,g.Z_)()),keybaseUsername:(0,g.jt)((0,g.Z_)())});new A("Vote111111111111111111111111111111111111111"),p.struct([W("nodePubkey"),W("authorizedVoterPubkey"),W("authorizedWithdrawerPubkey"),p.u8("commission"),p.nu64(),p.seq(p.struct([p.nu64("slot"),p.u32("confirmationCount")]),p.offset(p.u32(),-8),"votes"),p.u8("rootSlotValid"),p.nu64("rootSlot"),p.nu64("epoch"),p.nu64("credits"),p.nu64("lastEpochCredits"),p.nu64(),p.seq(p.struct([p.nu64("epoch"),p.nu64("credits"),p.nu64("prevCredits")]),p.offset(p.u32(),-8),"epochCredits")]);const Ge={http:{devnet:"http://api.devnet.solana.com",testnet:"http://api.testnet.solana.com","mainnet-beta":"http://api.mainnet-beta.solana.com"},https:{devnet:"https://api.devnet.solana.com",testnet:"https://api.testnet.solana.com","mainnet-beta":"https://api.mainnet-beta.solana.com"}};function Le(t,e){const r=!1===e?"http":"https";if(!t)return Ge[r].devnet;const s=Ge[r][t];if(!s)throw new Error(`Unknown ${r} cluster: ${t}`);return s}const Xe=1e9}}]);